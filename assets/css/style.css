/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

.btn, .btn-accent {
  display: block;
  -webkit-transition: background-color 0.5s;
  -o-transition: background-color 0.5s;
  transition: background-color 0.5s;
  text-align: center;
  letter-spacing: 0.1em;
  height: 60px;
}

.btn:hover, .btn-accent:hover {
  background-color: #d66926;
}

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

main {
  display: block;
}

html {
  font-size: 16px;
  font-family: "Roboto", sans-serif;
  overflow-y: scroll;
  color: #637588;
  line-height: 1.15;
}

section {
  display: block;
}

a {
  text-decoration: none;
  color: #ffffff;
  background-color: transparent;
}

h1 {
  font-family: "Roboto Slab", serif;
  font-weight: 300;
  letter-spacing: 0.08em;
  line-height: 1.2em;
}

h2 {
  letter-spacing: 0.1em;
  font-family: "Roboto Slab", serif;
  line-height: 1.2em;
  color: #2d3651;
  font-size: 2.5rem;
  margin-bottom: 56px;
}

h3 {
  letter-spacing: 0.05em;
  color: #637588;
  font-size: 1.125rem;
}

p {
  font-size: 1.125rem;
  color: #637588;
}

.btn {
  padding: 18px 20px;
  display: block;
  background-color: rgba(255, 255, 255, 0.1);
  border: 2px solid #ffffff;
  text-align: center;
  letter-spacing: 0.1em;
  font-size: 1.125rem;
}

.btn-accent {
  padding: 18px 20px;
  font-size: 1.125rem;
  background-color: rgba(45, 54, 81, 0.8);
  border: 2px solid #2d3651;
  width: 350px;
}

h3 {
  display: block;
  font-weight: bold;
}

li {
  display: list-item;
}

ul {
  display: block;
  list-style-type: disc;
}

button,
input,
optgroup,
select,
textarea {
  margin: 0;
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
}

.about h2,
.posts h2 {
  margin-top: 0;
}

.header {
  position: relative;
  min-height: 100vh;
  background-size: cover;
  background-position: 50% 50%;
  padding: 100px 0;
  display: grid;
  -ms-flex-line-pack: center;
      align-content: center;
  color: #ffffff;
}

.header-content {
  position: relative;
}

.header-content__container {
  display: grid;
  max-height: 185px;
  max-width: 1340px;
  margin: auto;
  padding-left: 20px;
  padding-right: 20px;
}

.header-content__title {
  text-align: center;
}

.header-content__buttons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-bottom: 0;
}

.header-logo {
  margin-top: 20px;
  -ms-flex-item-align: center;
      align-self: center;
  letter-spacing: 0.22em;
  font-size: 1.5rem;
  margin-bottom: 20px;
}

.header-logo__link {
  padding: 20px 20px 20px 0;
  display: block;
}

.header-logo__accent {
  display: inline-block;
  padding: 14px 1px 13px 5px;
  margin-right: 4px;
  border: 3px solid #d53d27;
}

.header-menu {
  position: absolute;
  z-index: 1;
  width: 100%;
  top: 0;
  left: 0;
}

.header-menu__container {
  display: grid;
  grid-template-columns: auto 1fr;
  max-width: 1340px;
  margin: auto;
  padding-left: 20px;
  padding-right: 20px;
}

.header-navbar {
  position: relative;
  display: grid;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  justify-items: end;
  letter-spacing: 0.1em;
}

.header-navbar__hamburger {
  z-index: 5;
  width: 30px;
  height: 23px;
  position: relative;
  margin: 20px 0;
  -webkit-transform: rotate(0deg);
      -ms-transform: rotate(0deg);
          transform: rotate(0deg);
  -webkit-transition: all 0.5s ease-in-out;
  -o-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
  cursor: pointer;
}

.header-navbar__hamburger span {
  display: block;
  position: absolute;
  height: 3px;
  width: 100%;
  background: #ffffff;
  border-radius: 3px;
  opacity: 1;
  left: 0;
  -webkit-transform: rotate(0deg);
      -ms-transform: rotate(0deg);
          transform: rotate(0deg);
  -webkit-transition: 0.25s ease-in-out;
  -o-transition: 0.25s ease-in-out;
  transition: 0.25s ease-in-out;
}

.header-navbar__hamburger span:nth-child(1) {
  top: 0px;
}

.header-navbar__hamburger span:nth-child(2), .header-navbar__hamburger span:nth-child(3) {
  top: 9px;
}

.header-navbar__hamburger span:nth-child(4) {
  top: 18px;
}

.header-navbar__hamburger.active span:nth-child(1) {
  top: 9px;
  width: 0%;
  left: 50%;
}

.header-navbar__hamburger.active span:nth-child(2) {
  -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
          transform: rotate(45deg);
}

.header-navbar__hamburger.active span:nth-child(3) {
  -webkit-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
          transform: rotate(-45deg);
}

.header-navbar__hamburger.active span:nth-child(4) {
  top: 9px;
  width: 0%;
  left: 50%;
}

.header-navbar__btn-row {
  display: block;
  position: absolute;
  height: 3px;
  width: 100%;
  background: #ffffff;
  border-radius: 3px;
  opacity: 1;
  left: 0;
  -webkit-transform: rotate(0deg);
      -ms-transform: rotate(0deg);
          transform: rotate(0deg);
  -webkit-transition: 0.25s ease-in-out;
  -o-transition: 0.25s ease-in-out;
  transition: 0.25s ease-in-out;
}

.header-navbar__btn-row:nth-child(1) {
  top: 0px;
}

.header-navbar__btn-row:nth-child(2), .header-navbar__btn-row:nth-child(3) {
  top: 9px;
}

.header-navbar__btn-row:nth-child(4) {
  top: 18px;
}

.header-navbar__list {
  list-style: none;
  padding: 0;
  margin: 20px -20px 20px 0;
  width: 100%;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: end;
}

.header-navbar__list.active {
  margin: 0;
  z-index: 3;
  display: block;
  position: absolute;
  top: 100%;
  right: 20px;
  width: 125px;
  background-color: rgba(68, 89, 110, 0.9);
  text-align: right;
}

.header-navbar__list.active li {
  display: block;
  z-index: 5;
}

.header-navbar__list.active li a {
  padding: 20px;
}

.header-navbar__link {
  display: block;
  padding: 20px;
  font-size: 1.125rem;
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
}

.header-navbar__link:hover {
  color: #d66926;
}

ul {
  list-style-type: disc;
}

.header-navbar__btn-row:nth-of-type(1) {
  top: 0;
}

.header-navbar__btn-row:nth-of-type(2) {
  top: 9px;
}

.header-navbar__btn-row:nth-of-type(3) {
  top: 18px;
}

.header-navbar__list {
  list-style: none;
  display: inline-block;
}

li {
  display: inline-block;
}

.header-overlay {
  position: absolute;
  background-color: #2d3651;
  opacity: 0.8;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.skills {
  padding: 10px 10px 40px 10px;
}

.skills__container {
  display: grid;
  padding-bottom: 20px;
  grid-gap: 10px;
  grid-template-areas: "a1 a1 a2 a3" "a4 a5 a5 a6" "a7 a8 a9 a6";
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 10px;
}

.skills__button {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.skill-item {
  min-height: calc(33.33vh - 12px);
  background-color: #2d3651;
  position: relative;
  overflow: hidden;
  padding: 20px;
}

.skill-item__overlay {
  background-color: #2d3651;
  z-index: 1;
  opacity: 0.8;
  -webkit-transition: opacity 0.5s;
  -o-transition: opacity 0.5s;
  transition: opacity 0.5s;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.skill-item__image {
  background-position: 50% 50%;
  background-size: cover;
  -webkit-transition: -webkit-transform 0.5s;
  transition: -webkit-transform 0.5s;
  -o-transition: transform 0.5s;
  transition: transform 0.5s;
  transition: transform 0.5s, -webkit-transform 0.5s;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.skill-item__title {
  font-size: 1.25rem;
  z-index: 1;
  margin: 0;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.skill-item__link {
  padding: 20px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 100%;
  height: 100%;
  font-size: 1.25rem;
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
  letter-spacing: 0.1em;
}

.skill-item:nth-of-type(1) {
  grid-area: a1;
}

.skill-item:nth-of-type(2) {
  grid-area: a2;
}

.skill-item:nth-of-type(3) {
  grid-area: a3;
}

.skill-item:nth-of-type(4) {
  grid-area: a4;
}

.skill-item:nth-of-type(5) {
  grid-area: a5;
}

.skill-item:nth-of-type(6) {
  grid-area: a6;
}

.skill-item:nth-of-type(7) {
  grid-area: a7;
}

.skill-item:nth-of-type(8) {
  grid-area: a8;
}

.skill-item:nth-of-type(9) {
  grid-area: a9;
}

.skill-item:hover .skill-item__overlay {
  opacity: 0.95 !important;
}

.skill-item:hover .skill-item__image {
  -webkit-transform: scale(1.1);
      -ms-transform: scale(1.1);
          transform: scale(1.1);
}

.skill-item:hover .skill-item__link {
  color: #d66926;
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
}

.about {
  background-color: #e5e5e5;
  letter-spacing: 0.055em;
}

.about__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  max-width: 1340px;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin: 0 auto;
  padding-left: 20px;
  padding-right: 20px;
}

.about__separator {
  width: 1px;
  height: 200px;
  background-color: rgba(112, 112, 112, 0.27);
}

.about__content {
  display: block;
  max-width: 936px;
  overflow: hidden;
  padding-right: 10px;
}

.about__content-title {
  margin-bottom: 40px;
}

.about__content-text {
  max-height: 320px;
}

.about__image {
  margin-left: 10px;
  margin-right: 5px;
  width: 271px;
  height: 487px;
  /*&-img {
                width: 100%;
                height: 100%;
                object-fit: scale-down;
                text-align: center;
            }*/
}

.about .about__content p:first-of-type {
  margin-top: -5px;
}

.about .about h2,
.about .posts h2 {
  margin-top: 0;
}

.form {
  padding: 30px 0;
  background-color: #2d3651;
}

.form__container {
  display: grid;
  grid-gap: 20px;
  max-width: 1340px;
  margin: auto;
  padding-left: 20px;
  padding-right: 20px;
}

.form-item {
  color: #ffffff;
}

.form-item:nth-of-type(1) {
  grid-area: f1;
}

.form-item:nth-of-type(2) {
  grid-area: f2;
}

.form-item:nth-of-type(3) {
  grid-area: f3;
}

.form-item__input {
  display: block;
  width: 100%;
  height: 60px;
  padding-right: 30px;
  padding-left: 30px;
  -webkit-transition: background-color 0.5s, border-color 0.5s;
  -o-transition: background-color 0.5s, border-color 0.5s;
  transition: background-color 0.5s, border-color 0.5s;
  letter-spacing: 0.15em;
  color: #ffffff;
  border: 2px solid rgba(255, 255, 255, 0);
  border-bottom-color: rgba(255, 255, 255, 0.25);
  background-color: rgba(255, 255, 255, 0.05);
  font-size: 1.125rem;
}

form .btn-accent {
  width: 100%;
  color: #ffffff;
  border-color: rgba(255, 255, 255, 0);
  border-bottom-color: rgba(255, 255, 255, 0.2);
  background-color: rgba(255, 255, 255, 0.1);
}

.form .btn-accent:hover,
.form .btn-accent:focus {
  cursor: pointer;
  border-color: #ffffff;
  background-color: #d66926;
  outline: none;
}

.form-item__input::-webkit-input-placeholder {
  color: #637588;
}

.form-item__input::-moz-placeholder {
  color: #637588;
}

.form-item__input:-ms-input-placeholder {
  color: #637588;
}

.form-item__input::-ms-input-placeholder {
  color: #637588;
}

.form-item__input::placeholder {
  color: #637588;
}

.form-item__input:hover,
.form-item__input:focus {
  border-color: rgba(255, 255, 255, 0.15);
  border-bottom-color: #ffffff;
  background-color: rgba(255, 255, 255, 0.15);
  outline: none;
}

.form-item__input:hover::-webkit-input-placeholder, .form-item__input:focus::-webkit-input-placeholder {
  color: #8c9bab;
}

.form-item__input:hover::-moz-placeholder, .form-item__input:focus::-moz-placeholder {
  color: #8c9bab;
}

.form-item__input:hover:-ms-input-placeholder, .form-item__input:focus:-ms-input-placeholder {
  color: #8c9bab;
}

.form-item__input:hover::-ms-input-placeholder, .form-item__input:focus::-ms-input-placeholder {
  color: #8c9bab;
}

.form-item__input:hover::placeholder,
.form-item__input:focus::placeholder {
  color: #8c9bab;
}

.posts {
  padding-top: 100px;
  padding-bottom: 100px;
  display: block;
}

.posts__container {
  max-width: 1340px;
  margin: auto;
  padding-right: 20px;
  padding-left: 20px;
  display: grid;
}

.posts__grid {
  display: grid;
  padding-bottom: 20px;
  grid-gap: 20px;
}

.posts__button {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.post-item {
  display: grid;
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
  background-color: #f2f2f2;
  min-height: 540px;
}

.post-item__link {
  display: grid;
  overflow: hidden;
  height: 100%;
  grid-template-rows: 300px 1fr;
}

.post-item__caption {
  display: grid;
  -ms-flex-line-pack: center;
      align-content: center;
  padding: 20px;
}

.post-item__image {
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  background-size: cover;
  -o-object-fit: cover;
     object-fit: cover;
  left: 0;
  right: 0;
}

.post-item__image--item {
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
  -o-object-fit: cover;
     object-fit: cover;
  width: 100%;
  height: 100%;
}

.post-item__text {
  font-size: 1rem;
  font-weight: 400;
}

.post-item:nth-of-type(1) {
  grid-area: p1;
}

.post-item:nth-of-type(2) {
  grid-area: p2;
}

.post-item:nth-of-type(3) {
  grid-area: p3;
}

.post-item:nth-of-type(4) {
  grid-area: p4;
}

.post-item:nth-of-type(5) {
  grid-area: p5;
}

.post-item:nth-of-type(6) {
  grid-area: p6;
}

.post-item__link {
  display: grid;
  overflow: hidden;
  height: 100%;
  grid-template-rows: 300px 1fr;
}

.post-item:hover {
  background-color: #d8d8d8;
}

.post-item:hover .post-item__image img {
  -webkit-transform: scale(1.1);
      -ms-transform: scale(1.1);
          transform: scale(1.1);
}

.post-item:hover h3 {
  color: #2d3651;
}

.post-item:hover p {
  color: #2d3651;
}

p {
  font-size: 1.125rem;
  display: block;
  color: #637588;
}

.post-item__caption h3 {
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
  text-align: center;
  font-family: "Roboto Slab", serif;
}

.post-item__caption p {
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
  text-align: center;
  overflow: hidden;
}

h2 {
  letter-spacing: 0.1em;
  color: #2d3651;
  font-family: "Roboto Slab", serif;
  line-height: 1.2em;
}

h3 {
  letter-spacing: 0.05em;
  color: #637588;
  font-size: 1.125rem;
}

p {
  display: block;
}

.post-item:hover .post-item__image img {
  -webkit-transform: scale(1.1);
      -ms-transform: scale(1.1);
          transform: scale(1.1);
}

.footer {
  padding: 50px 20px 70px;
  text-align: center;
  background-color: #2d3651;
  display: block;
  height: 252.8px;
}

.footer__container {
  max-width: 1340px;
  margin: auto;
  padding-right: 20px;
  padding-left: 20px;
  height: 132.8px;
}

.footer__social {
  position: relative;
  display: grid;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  font-size: 36px;
  margin-bottom: 40px;
  height: 56px;
  grid-template-columns: repeat(auto-fit, minmax(50px, -webkit-max-content));
  grid-template-columns: repeat(auto-fit, minmax(50px, max-content));
}

.footer__social::after {
  position: absolute;
  bottom: -20px;
  left: calc(50% - 75px / 2);
  width: 75px;
  height: 2px;
  content: "";
  background-color: rgba(255, 255, 255, 0.1);
}

.fab {
  font-size: 36px;
  font-weight: 400;
  font-family: "Font Awesome 5 Brands";
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
}

.footer__social a {
  display: block;
  padding: 10px;
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
}

.footer__social a:hover,
.footer__social a:focus {
  color: #d66926;
}

.footer__social .fab {
  font-size: 36px;
}

.footer__copy span:nth-of-type(1) {
  margin-right: -0.5em;
  letter-spacing: 0.33em;
  font-weight: 100;
}

.footer__copy span:nth-of-type(2) {
  letter-spacing: 0.05em;
  color: #e5e5e5;
  font-weight: 700;
}

@media (min-width: 576px) {
  .skills {
    padding: 10px 10px 40px;
  }
  .posts__button {
    min-width: 350px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
}

@media (min-width: 767px) {
  .header-navbar__list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(50px, -webkit-max-content));
    grid-template-columns: repeat(auto-fit, minmax(50px, max-content));
    width: 100%;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
  }
}

@media (min-width: 768px) {
  .header-navbar__hamburger {
    display: none;
  }
}

@media (min-width: 992px) {
  h1 {
    font-size: 3.75rem;
  }
  .header-content__title {
    margin: 0 0 53px 0;
  }
  .header-content__buttons .btn {
    min-width: 250px;
    height: 60px;
  }
  .header-content__buttons .btn:not(:last-of-type) {
    margin-right: 20px;
  }
  .skills__container {
    grid-template-areas: "a1 a1 a2 a3" "a4 a5 a5 a6" "a7 a8 a9 a6";
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 10px;
  }
  .about {
    padding-top: 100px;
    padding-bottom: 100px;
    min-height: 699px;
  }
  .form__container {
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas: "f1 f2 f3";
  }
  .posts__grid {
    grid-template-areas: "p1 p1 p2 p3" "p4 p5 p6 p6";
    grid-template-columns: repeat(4, 1fr);
  }
  h2 {
    margin-bottom: 56px;
    font-size: 2.5rem;
  }
}

@media (min-width: 993px) {
  .btn {
    min-width: 250px;
    font-size: 1.125rem;
    height: 60px;
    padding: 18px 20px;
  }
}

@media (max-width: 1340px) and (min-width: 992px) {
  .about .about__content p:first-of-type::after {
    left: 950px;
    overflow: hidden;
    z-index: 10;
    width: 2px;
    height: 200px;
    background-color: rgba(99, 117, 136, 0.7);
  }
}

@media (max-width: 1340px) and (min-width: 993px) {
  .about {
    padding-top: 100px;
    padding-bottom: 100px;
    min-height: 699px;
    padding-right: 0;
    padding-left: 0;
  }
  .about__content {
    min-height: 499px;
  }
}

@media (max-width: 992px -1) {
  .about .about__content p {
    font-size: 1.125rem;
  }
  .about .about__content p:first-of-type::after {
    right: 50px;
  }
  .about h2 {
    margin-bottom: 56px;
    font-size: 2.5rem;
  }
}

@media (max-width: 992px) {
  .about__content {
    max-width: 639px;
  }
  .about__content-text {
    max-height: 315px;
  }
  .about__content {
    max-width: 630px;
  }
  .about__image {
    width: 255px;
    height: 459px;
  }
  .form {
    padding: 20px 0;
  }
}

@media (max-width: 992px) and (min-width: 769px) {
  .btn {
    min-width: 280px;
    font-size: 1rem;
    height: 50px;
    padding: 14px 20px;
  }
}

@media (max-width: 991px) {
  .header-content__title {
    margin: 0 0 43px;
  }
}

@media (max-width: 991px) and (min-width: 768px) {
  h1 {
    font-size: 2.5rem;
  }
  h2 {
    margin-bottom: 42px;
    font-size: 2rem;
    -webkit-margin-before: 0;
            margin-block-start: 0;
  }
  .header-content__buttons .btn {
    min-width: 200px;
    height: 50px;
    padding-top: 14px;
    padding-bottom: 14px;
    letter-spacing: 0.1em;
    font-size: 1rem;
  }
  .header-content__buttons .btn:not(:last-of-type) {
    margin-right: 20px;
  }
  .skills__container {
    grid-gap: 10px;
    grid-template-areas: "a1 a1 a2" "a3 a4 a4" "a5 a5 a6" "a7 a8 a6" "a7 a9 a9";
    grid-template-columns: repeat(3, 1fr);
  }
  .about {
    padding-top: 80px;
    padding-bottom: 80px;
    min-height: 688px;
  }
  .about .about__content p:first-of-type::after {
    right: -50px;
  }
  .about h2 {
    margin-bottom: 42px;
    font-size: 2rem;
  }
  .form__container {
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas: "f1 f2 f3";
  }
  .posts {
    padding-top: 80px;
    padding-bottom: 80px;
  }
  .posts__grid {
    grid-template-areas: "p1 p1 p2" "p3 p4 p4" "p5 p5 p6";
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (max-width: 768px -1) {
  h1 {
    font-size: 1.875rem;
  }
}

@media (max-width: 768px) {
  .btn {
    min-width: 170px;
    font-size: 1rem;
    height: 40px;
    padding: 19px 20px;
  }
  .header-menu {
    background-color: rgba(68, 89, 110, 0.25);
  }
  .header-navbar__list {
    display: none;
  }
  .about__content {
    max-width: 674px;
  }
  .about__content-text {
    max-height: 266px;
  }
  .about__content-text p {
    font-size: 1rem;
    font-weight: 400;
  }
  .about__image {
    width: 236px;
    height: 425px;
  }
}

@media (max-width: 767px) {
  .header-navbar__hamburger {
    display: block;
  }
  .posts {
    padding-top: 60px;
    padding-bottom: 60px;
  }
}

@media (max-width: 767px) and (min-width: 576px) {
  .header-content__buttons .btn {
    min-width: 170px;
    height: 40px;
    padding-top: 10px;
    padding-bottom: 10px;
    letter-spacing: 0.05em;
    font-size: 1rem;
  }
  .header-content__buttons .btn:not(:last-of-type) {
    margin-right: 20px;
  }
  .skills__container {
    grid-gap: 10px;
    grid-template-areas: "a1 a2" "a3 a2" "a4 a4" "a5 a6" "a5 a7" "a8 a9";
    grid-template-columns: 1fr 1fr;
  }
  .about {
    padding-top: 60px;
    padding-bottom: 60px;
    padding-right: 0;
    padding-left: 0;
  }
  .about .about__content p:first-of-type::after {
    right: -70px;
  }
  .about h2 {
    margin-bottom: 36px;
    font-size: 1.5rem;
  }
  .form__container {
    grid-template-columns: 1fr 1fr;
    grid-template-areas: "f1 f1" "f2 f3";
  }
  .posts__grid {
    grid-template-areas: "p1 p2" "p3 p4" "p5 p6";
    grid-template-columns: 1fr 1fr;
  }
}

@media (max-width: 576px) {
  .about {
    padding-top: 60px;
    max-height: 1159px;
    padding-right: 0;
    padding-left: 0;
  }
  .about__container {
    display: block;
  }
  .about__separator {
    display: none;
  }
  .about__content {
    max-width: 532px;
  }
  .about__content-text {
    max-height: 315px;
  }
  .about__image {
    width: 271px;
    height: 527px;
    margin: 39px auto 0;
    padding-bottom: 40px;
  }
}

@media (max-width: 575px) {
  h2 {
    margin-bottom: 36px;
    text-align: center;
    font-size: 1.5rem;
  }
  .btn-accent {
    width: 100%;
  }
  .header-content__buttons {
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
  .header-content__buttons .btn {
    min-width: 170px;
    height: 40px;
    padding-top: 10px;
    padding-bottom: 10px;
    letter-spacing: 0.05em;
    font-size: 1rem;
  }
  .header-content__buttons .btn:not(:last-of-type) {
    margin-bottom: 20px;
  }
  .skills {
    padding: 20px;
  }
  .skills__container {
    grid-gap: 20px;
    grid-template-areas: "a1" "a2" "a3" "a4" "a5" "a6" "a7" "a8" "a9";
    grid-template-columns: 1fr;
  }
  .skills__button {
    width: 100%;
  }
  .about .about__content p:first-of-type::after {
    display: none;
  }
  .about h2 {
    margin-bottom: 36px;
    text-align: center;
    font-size: 1.5rem;
  }
  .form__container {
    grid-template-columns: 1fr;
    grid-template-areas: "f1" "f2" "f3";
  }
  .posts__grid {
    grid-template-areas: "p1" "p2" "p3" "p4" "p5" "p6";
    grid-template-columns: 1fr;
  }
  .posts__button {
    width: 100%;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
